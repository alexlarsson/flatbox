#!/bin/bash

#set -x

USER_DIR=${XDG_DATA_HOME:="$HOME/.local/share"}/flatpak
ARCH=$(flatpak --default-arch)

usage()
{
    echo "usage: flatbox [-h] create|list|enter|delete  .."
}

list()
{
    BOXES=$(flatpak list --user --app | grep ^org\.flatbox\. | awk '{ print $1 }' | awk -F / '{ print $1 }')
    echo "Current boxes:"
    for B in $BOXES; do
        NAME=$(echo $B | awk -F '.' '{ print $3 }')
        RUNTIME=$(flatpak info --user --show-runtime $B)
        echo $NAME - $RUNTIME
    done
}

create()
{
    if [ "$1" == "" ]; then
        echo No box name specified
        exit 1
    fi
    NAME=$1
    shift

    if [ "$1" == "" ]; then
        echo No runtime specified
        exit 1
    fi
    RUNTIME=$1
    shift

    if ! flatpak info $RUNTIME &> /dev/null; then
        echo Required runtime $RUNTIME not installed
        exit 1
    fi

    DIR=$(mktemp -d)

    flatpak build-init $DIR/app org.flatbox.$NAME $RUNTIME $RUNTIME master > /dev/null

    APPDIR=$HOME/.var/app/org.flatbox.$NAME
    mkdir -p $APPDIR/work
    for d in bin sbin lib lib64 libexec share etc include var; do
        mkdir -p $APPDIR/app/files/$d
        ln -s $APPDIR/app/files/$d $DIR/app/files/$d
    done
    cat > $APPDIR/app/files/bin/startbox <<EOF
#!/usr/bin/bash
cd $APPDIR/work
export FLATBOX_WORK=$APPDIR/work
export PS1="[ðŸ“¦$NAME \W] "
exec /usr/bin/bash
EOF
    chmod a+x $APPDIR/app/files/bin/startbox

    flatpak build-finish --filesystem=host --share=network --share=ipc --device=all --allow=devel --allow=multiarch \
            --socket=pulseaudio --socket=session-bus --socket=ssh-auth --socket=system-bus     --socket=wayland --socket=x11 \
            "--env=FLATBOX=$NAME" --command=/app/bin/startbox $DIR/app  > /dev/null
    flatpak build-export  $DIR/repo $DIR/app master > /dev/null
    flatpak install --user -y --no-deps $DIR/repo org.flatbox.$NAME > /dev/null

    rm -rf $DIR
    ORIGIN=$(flatpak info --user --show-origin org.flatbox.$NAME)
    flatpak remote-modify --user --url= --disable $ORIGIN
    LOCATION=$(flatpak info --user --show-location org.flatbox.$NAME)
    cp $LOCATION/metadata $APPDIR/app
    echo "Created flatbox $NAME"
}

enter()
{
    if [ "$1" == "" ]; then
        echo No box name specified
        exit 1
    fi
    NAME=$1
    shift
    #--die-with-parent ?
    exec flatpak run org.flatbox.$NAME
}

delete()
{
    if [ "$1" == "" ]; then
        echo No box name specified
        exit 1
    fi
    NAME=$1
    shift
    flatpak uninstall -y --user org.flatbox.$NAME > /dev/null
    APPDIR=$HOME/.var/app/org.flatbox.$NAME
    rm -rf $APPDIR
    echo "Removed flatbox $NAME"
}

while [[ "$1" == -* ]]; do
    case $1 in
        -h | --help )
            usage
            exit
            ;;
        * )
            echo "Unknown option $1"
            usage
            exit 1
    esac
    shift
done
if [ "$1" == "" ]; then
    usage
    exit 1
fi
OP=$1
shift
case $OP in
    create)
        create "$@"
        exit
        ;;
    list)
        list "$@"
        exit
        ;;
    enter)
        enter "$@"
        exit
        ;;
    delete)
        delete "$@"
        exit
        ;;
    * )
        echo "Unknown command $OP"
        usage
        exit 1
esac
